from typing import Any
from pathlib import Path
import numpy as np
import scipy.integrate


# Parameters
species = 28
trep = 1E-1 # s
dt = 1E-2 # maximum timestep for solving the system
tfin = 5000 # Final Time
xini = np.zeros(species)
xini[0] = 0.06
xini[1] = 0.06
xini[2] = 0.001
# Model at T=298.15 K
def model(t,x):
    dxdt = np.zeros(28)
    
    #Constants
    k00 = 2.3879015586e+10
    k01 = 2.1243982518e+11
    k02 = 2.1243982518e+11
    k03 = 4.2419670714e+10
    k04 = 2.1243982518e+11
    k05 = 3.5892724453e+08
    k06 = 8.9459924878e+10
    k07 = 2.1243982518e+11
    k08 = 2.1243982518e+11
    k09 = 1.0183331048e+10
    k10 = 9.3700913285e+08
    k11 = 2.1243982518e+11
    k12 = 2.1243982518e+11
    k13 = 6.6774708611e+10
    k14 = 2.1243982518e+11
    k15 = 4.8093650447e+10
    k16 = 2.1243982518e+11
    k17 = 1.7823783216e+10
    k18 = 1.1074004405e+11
    k19 = 2.1243982518e+11
    k20 = 1.9246277148e+11
    k21 = 2.1243982518e+11
    k22 = 2.1243982518e+11
    k23 = 6.6082482353e+07
    k24 = 2.1243982518e+11
    k25 = 9.1470071814e+09
    k26 = 2.1243982518e+11
    k27 = 1.1545435303e+10
    k28 = 2.1243982518e+11
    k29 = 1.8748640694e+09
    k30 = 2.1243982518e+11
    k31 = 1.6683540450e+08
    k32 = 2.1243982518e+11
    k33 = 2.5028575220e+08
    k34 = 2.1243982518e+11
    k35 = 5.7227381525e+09
    k36 = 2.1243982518e+11
    k37 = 6.4460565805e+06
    k38 = 2.1243982518e+11
    k39 = 8.1482755945e+09
    k40 = 2.1243982518e+11
    k41 = 1.8140744934e+08
    k42 = 1.0383401557e-12
    k43 = 2.0172181244e-09
    k44 = 2.7031498685e+00
    k45 = 3.3299577589e+01
    k46 = 2.0241159469e-04
    k47 = 6.0597263521e-01
    k48 = 4.7434285747e+01
    k49 = 3.7682484625e+03
    k50 = 1.0578076221e+01
    k51 = 5.8810492959e+03
    k52 = 5.8000856672e+07
    k53 = 2.1243982518e+11
    k54 = 2.7466562231e+10
    k55 = 2.1243982518e+11
    k56 = 1.6377167502e+09
    k57 = 2.1243982518e+11
    k58 = 2.1401337215e+07
    k59 = 2.1243982518e+11
    k60 = 1.0134697902e+10
    k61 = 2.1243982518e+11
    k62 = 2.6358947591e+05
    k63 = 2.1243982518e+11
    k64 = 4.6278952558e+07
    k65 = 2.1243982518e+11
    k66 = 4.1974735005e-19
    k67 = 4.5803622374e-26
    k68 = 1.1944036138e-09
    k69 = 7.8418615676e-15
    k70 = 7.7997350882e-07
    k71 = 9.8123126372e-14
    k72 = 4.3744799829e+00
    k73 = 3.2722983684e-03
    k74 = 1.6058155952e+02
    k75 = 1.2376918360e-03
    k76 = 1.7392507735e+09
    k77 = 2.1243982518e+11
    k78 = 5.9602290675e+08
    k79 = 2.1243982518e+11
    k80 = 3.4897202082e+09
    k81 = 2.1243982518e+11
    k82 = 1.5344040925e+11
    k83 = 2.1243982518e+11
    k84 = 2.7710512490e+08
    k85 = 2.1243982518e+11
    k86 = 3.1665326317e+10
    k87 = 2.1243982518e+11
    k88 = 1.0730901351e+11
    k89 = 2.1243982518e+11
    k90 = 3.5679678783e+07
    k91 = 2.1243982518e+11
    k92 = 1.1567613872e+11
    k93 = 2.1243982518e+11
    k94 = 1.1897606470e+10
    k95 = 2.1243982518e+11
    k96 = 1.3111918479e+09
    k97 = 2.1243982518e+11
    k98 = 1.2556504132e+10
    k99 = 2.1243982518e+11
    k100 = 1.8069355666e+09
    k101 = 2.1243982518e+11
    k102 = 5.2728075493e+09
    k103 = 2.1243982518e+11
    
    #Ratelaws
    r00 = k00*x[0]*x[1]
    r01 = k01*x[3]
    r02 = k02*x[0]*x[2]
    r03 = k03*x[4]
    r04 = k04*x[1]*x[2]
    r05 = k05*x[5]
    r06 = k06*x[1]*x[1]
    r07 = k07*x[7]
    r08 = k08*x[2]*x[2]
    r09 = k09*x[6]
    r10 = k10*x[0]*x[5]
    r11 = k11*x[8]
    r12 = k12*x[0]*x[7]
    r13 = k13*x[9]
    r14 = k14*x[0]*x[6]
    r15 = k15*x[10]
    r16 = k16*x[1]*x[3]
    r17 = k17*x[9]
    r18 = k18*x[1]*x[4]
    r19 = k19*x[8]
    r20 = k20*x[1]*x[5]
    r21 = k21*x[12]
    r22 = k22*x[1]*x[6]
    r23 = k23*x[11]
    r24 = k24*x[2]*x[3]
    r25 = k25*x[8]
    r26 = k26*x[2]*x[4]
    r27 = k27*x[10]
    r28 = k28*x[2]*x[5]
    r29 = k29*x[11]
    r30 = k30*x[2]*x[7]
    r31 = k31*x[12]
    r32 = k32*x[2]*x[6]
    r33 = k33*x[13]
    r34 = k34*x[3]*x[5]
    r35 = k35*x[14]
    r36 = k36*x[3]*x[6]
    r37 = k37*x[15]
    r38 = k38*x[4]*x[5]
    r39 = k39*x[15]
    r40 = k40*x[4]*x[7]
    r41 = k41*x[14]
    r42 = k42*x[3]
    r43 = k43*x[16]
    r44 = k44*x[8]
    r45 = k45*x[17]
    r46 = k46*x[9]
    r47 = k47*x[18]
    r48 = k48*x[15]
    r49 = k49*x[20]
    r50 = k50*x[14]
    r51 = k51*x[19]
    r52 = k52*x[17]
    r53 = k53*x[2]*x[16]
    r54 = k54*x[18]
    r55 = k55*x[1]*x[16]
    r56 = k56*x[19]
    r57 = k57*x[5]*x[16]
    r58 = k58*x[19]
    r59 = k59*x[2]*x[18]
    r60 = k60*x[19]
    r61 = k61*x[1]*x[17]
    r62 = k62*x[20]
    r63 = k63*x[6]*x[16]
    r64 = k64*x[20]
    r65 = k65*x[2]*x[17]
    r66 = k66*x[16]
    r67 = k67*x[22]
    r68 = k68*x[17]
    r69 = k69*x[24]
    r70 = k70*x[18]
    r71 = k71*x[25]
    r72 = k72*x[20]
    r73 = k73*x[27]
    r74 = k74*x[19]
    r75 = k75*x[26]
    r76 = k76*x[22]
    r77 = k77*x[2]*x[21]
    r78 = k78*x[24]
    r79 = k79*x[6]*x[21]
    r80 = k80*x[24]
    r81 = k81*x[2]*x[22]
    r82 = k82*x[25]
    r83 = k83*x[5]*x[21]
    r84 = k84*x[25]
    r85 = k85*x[2]*x[23]
    r86 = k86*x[25]
    r87 = k87*x[1]*x[22]
    r88 = k88*x[26]
    r89 = k89*x[11]*x[21]
    r90 = k90*x[26]
    r91 = k91*x[6]*x[23]
    r92 = k92*x[26]
    r93 = k93*x[5]*x[22]
    r94 = k94*x[26]
    r95 = k95*x[1]*x[24]
    r96 = k96*x[26]
    r97 = k97*x[2]*x[25]
    r98 = k98*x[27]
    r99 = k99*x[13]*x[21]
    r100 = k100*x[27]
    r101 = k101*x[6]*x[22]
    r102 = k102*x[27]
    r103 = k103*x[2]*x[24]
    
    #MassBalances
    dxdt[0] = -r00+r01-r02+r03-r10+r11-r12+r13-r14+r15
    dxdt[1] = -r00+r01-r04+r05-2.0*r06+2.0*r07-r16+r17-r18+r19-r20+r21-r22+r23+r54-r55+r60-r61+r86-r87+r94-r95
    dxdt[2] = -r02+r03-r04+r05-2.0*r08+2.0*r09-r24+r25-r26+r27-r28+r29-r30+r31-r32+r33+r52-r53+r58-r59+r64-r65+r76-r77+r80-r81+r84-r85+r96-r97+r102-r103
    dxdt[3] = +r00-r01-r16+r17-r24+r25-r34+r35-r36+r37-r42+r43
    dxdt[4] = +r02-r03-r18+r19-r26+r27-r38+r39-r40+r41
    dxdt[5] = +r04-r05-r10+r11-r20+r21-r28+r29-r34+r35-r38+r39+r56-r57+r82-r83+r92-r93
    dxdt[6] = +r08-r09-r14+r15-r22+r23-r32+r33-r36+r37+r62-r63+r78-r79+r90-r91+r100-r101
    dxdt[7] = +r06-r07-r12+r13-r30+r31-r40+r41
    dxdt[8] = +r10-r11+r18-r19+r24-r25-r44+r45
    dxdt[9] = +r12-r13+r16-r17-r46+r47
    dxdt[10] = +r14-r15+r26-r27
    dxdt[11] = +r22-r23+r28-r29+r88-r89
    dxdt[12] = +r20-r21+r30-r31
    dxdt[13] = +r32-r33+r98-r99
    dxdt[14] = +r34-r35+r40-r41-r50+r51
    dxdt[15] = +r36-r37+r38-r39-r48+r49
    dxdt[16] = +r42-r43+r52-r53+r54-r55+r56-r57+r62-r63-r66+r67
    dxdt[17] = +r44-r45-r52+r53+r60-r61+r64-r65-r68+r69
    dxdt[18] = +r46-r47-r54+r55+r58-r59-r70+r71
    dxdt[19] = +r50-r51-r56+r57-r58+r59-r60+r61-r74+r75
    dxdt[20] = +r48-r49-r62+r63-r64+r65-r72+r73
    dxdt[21] = +r76-r77+r78-r79+r82-r83+r88-r89+r98-r99
    dxdt[22] = +r66-r67-r76+r77+r80-r81+r86-r87+r92-r93+r100-r101
    dxdt[23] = +r84-r85+r90-r91
    dxdt[24] = +r68-r69-r78+r79-r80+r81+r94-r95+r102-r103
    dxdt[25] = +r70-r71-r82+r83-r84+r85-r86+r87+r96-r97
    dxdt[26] = +r74-r75-r88+r89-r90+r91-r92+r93-r94+r95-r96+r97
    dxdt[27] = +r72-r73-r98+r99-r100+r101-r102+r103
    
    return dxdt
    
def jacobian(t,x):
    Jac = np.zeros(shape=(28,28))
    
    #Constants
    k00 = 2.3879015586e+10
    k01 = 2.1243982518e+11
    k02 = 2.1243982518e+11
    k03 = 4.2419670714e+10
    k04 = 2.1243982518e+11
    k05 = 3.5892724453e+08
    k06 = 8.9459924878e+10
    k07 = 2.1243982518e+11
    k08 = 2.1243982518e+11
    k09 = 1.0183331048e+10
    k10 = 9.3700913285e+08
    k11 = 2.1243982518e+11
    k12 = 2.1243982518e+11
    k13 = 6.6774708611e+10
    k14 = 2.1243982518e+11
    k15 = 4.8093650447e+10
    k16 = 2.1243982518e+11
    k17 = 1.7823783216e+10
    k18 = 1.1074004405e+11
    k19 = 2.1243982518e+11
    k20 = 1.9246277148e+11
    k21 = 2.1243982518e+11
    k22 = 2.1243982518e+11
    k23 = 6.6082482353e+07
    k24 = 2.1243982518e+11
    k25 = 9.1470071814e+09
    k26 = 2.1243982518e+11
    k27 = 1.1545435303e+10
    k28 = 2.1243982518e+11
    k29 = 1.8748640694e+09
    k30 = 2.1243982518e+11
    k31 = 1.6683540450e+08
    k32 = 2.1243982518e+11
    k33 = 2.5028575220e+08
    k34 = 2.1243982518e+11
    k35 = 5.7227381525e+09
    k36 = 2.1243982518e+11
    k37 = 6.4460565805e+06
    k38 = 2.1243982518e+11
    k39 = 8.1482755945e+09
    k40 = 2.1243982518e+11
    k41 = 1.8140744934e+08
    k42 = 1.0383401557e-12
    k43 = 2.0172181244e-09
    k44 = 2.7031498685e+00
    k45 = 3.3299577589e+01
    k46 = 2.0241159469e-04
    k47 = 6.0597263521e-01
    k48 = 4.7434285747e+01
    k49 = 3.7682484625e+03
    k50 = 1.0578076221e+01
    k51 = 5.8810492959e+03
    k52 = 5.8000856672e+07
    k53 = 2.1243982518e+11
    k54 = 2.7466562231e+10
    k55 = 2.1243982518e+11
    k56 = 1.6377167502e+09
    k57 = 2.1243982518e+11
    k58 = 2.1401337215e+07
    k59 = 2.1243982518e+11
    k60 = 1.0134697902e+10
    k61 = 2.1243982518e+11
    k62 = 2.6358947591e+05
    k63 = 2.1243982518e+11
    k64 = 4.6278952558e+07
    k65 = 2.1243982518e+11
    k66 = 4.1974735005e-19
    k67 = 4.5803622374e-26
    k68 = 1.1944036138e-09
    k69 = 7.8418615676e-15
    k70 = 7.7997350882e-07
    k71 = 9.8123126372e-14
    k72 = 4.3744799829e+00
    k73 = 3.2722983684e-03
    k74 = 1.6058155952e+02
    k75 = 1.2376918360e-03
    k76 = 1.7392507735e+09
    k77 = 2.1243982518e+11
    k78 = 5.9602290675e+08
    k79 = 2.1243982518e+11
    k80 = 3.4897202082e+09
    k81 = 2.1243982518e+11
    k82 = 1.5344040925e+11
    k83 = 2.1243982518e+11
    k84 = 2.7710512490e+08
    k85 = 2.1243982518e+11
    k86 = 3.1665326317e+10
    k87 = 2.1243982518e+11
    k88 = 1.0730901351e+11
    k89 = 2.1243982518e+11
    k90 = 3.5679678783e+07
    k91 = 2.1243982518e+11
    k92 = 1.1567613872e+11
    k93 = 2.1243982518e+11
    k94 = 1.1897606470e+10
    k95 = 2.1243982518e+11
    k96 = 1.3111918479e+09
    k97 = 2.1243982518e+11
    k98 = 1.2556504132e+10
    k99 = 2.1243982518e+11
    k100 = 1.8069355666e+09
    k101 = 2.1243982518e+11
    k102 = 5.2728075493e+09
    k103 = 2.1243982518e+11
    
    #Non-zero Elements
    Jac[0,0] = -k00*x[1]-k02*x[2]-k10*x[5]-k12*x[7]-k14*x[6]
    Jac[0,1] = -k00*x[0]
    Jac[0,2] = -k02*x[0]
    Jac[0,3] = +k01
    Jac[0,4] = +k03
    Jac[0,5] = -k10*x[0]
    Jac[0,6] = -k14*x[0]
    Jac[0,7] = -k12*x[0]
    Jac[0,8] = +k11
    Jac[0,9] = +k13
    Jac[0,10] = +k15
    Jac[1,0] = -k00*x[1]
    Jac[1,1] = -k00*x[0]-k04*x[2]-2.0*2.0*k06*x[1]-k16*x[3]-k18*x[4]-k20*x[5]-k22*x[6]-k55*x[16]-k61*x[17]-k87*x[22]-k95*x[24]
    Jac[1,2] = -k04*x[1]
    Jac[1,3] = +k01-k16*x[1]
    Jac[1,4] = -k18*x[1]
    Jac[1,5] = +k05-k20*x[1]
    Jac[1,6] = -k22*x[1]
    Jac[1,7] = +2.0*k07
    Jac[1,8] = +k19
    Jac[1,9] = +k17
    Jac[1,11] = +k23
    Jac[1,12] = +k21
    Jac[1,16] = -k55*x[1]
    Jac[1,17] = -k61*x[1]
    Jac[1,18] = +k54
    Jac[1,19] = +k60
    Jac[1,22] = -k87*x[1]
    Jac[1,24] = -k95*x[1]
    Jac[1,25] = +k86
    Jac[1,26] = +k94
    Jac[2,0] = -k02*x[2]
    Jac[2,1] = -k04*x[2]
    Jac[2,2] = -k02*x[0]-k04*x[1]-2.0*2.0*k08*x[2]-k24*x[3]-k26*x[4]-k28*x[5]-k30*x[7]-k32*x[6]-k53*x[16]-k59*x[18]-k65*x[17]-k77*x[21]-k81*x[22]-k85*x[23]-k97*x[25]-k103*x[24]
    Jac[2,3] = -k24*x[2]
    Jac[2,4] = +k03-k26*x[2]
    Jac[2,5] = +k05-k28*x[2]
    Jac[2,6] = +2.0*k09-k32*x[2]
    Jac[2,7] = -k30*x[2]
    Jac[2,8] = +k25
    Jac[2,10] = +k27
    Jac[2,11] = +k29
    Jac[2,12] = +k31
    Jac[2,13] = +k33
    Jac[2,16] = -k53*x[2]
    Jac[2,17] = +k52-k65*x[2]
    Jac[2,18] = -k59*x[2]
    Jac[2,19] = +k58
    Jac[2,20] = +k64
    Jac[2,21] = -k77*x[2]
    Jac[2,22] = +k76-k81*x[2]
    Jac[2,23] = -k85*x[2]
    Jac[2,24] = +k80-k103*x[2]
    Jac[2,25] = +k84-k97*x[2]
    Jac[2,26] = +k96
    Jac[2,27] = +k102
    Jac[3,0] = +k00*x[1]
    Jac[3,1] = +k00*x[0]-k16*x[3]
    Jac[3,2] = -k24*x[3]
    Jac[3,3] = -k01-k16*x[1]-k24*x[2]-k34*x[5]-k36*x[6]-k42
    Jac[3,5] = -k34*x[3]
    Jac[3,6] = -k36*x[3]
    Jac[3,8] = +k25
    Jac[3,9] = +k17
    Jac[3,14] = +k35
    Jac[3,15] = +k37
    Jac[3,16] = +k43
    Jac[4,0] = +k02*x[2]
    Jac[4,1] = -k18*x[4]
    Jac[4,2] = +k02*x[0]-k26*x[4]
    Jac[4,4] = -k03-k18*x[1]-k26*x[2]-k38*x[5]-k40*x[7]
    Jac[4,5] = -k38*x[4]
    Jac[4,7] = -k40*x[4]
    Jac[4,8] = +k19
    Jac[4,10] = +k27
    Jac[4,14] = +k41
    Jac[4,15] = +k39
    Jac[5,0] = -k10*x[5]
    Jac[5,1] = +k04*x[2]-k20*x[5]
    Jac[5,2] = +k04*x[1]-k28*x[5]
    Jac[5,3] = -k34*x[5]
    Jac[5,4] = -k38*x[5]
    Jac[5,5] = -k05-k10*x[0]-k20*x[1]-k28*x[2]-k34*x[3]-k38*x[4]-k57*x[16]-k83*x[21]-k93*x[22]
    Jac[5,8] = +k11
    Jac[5,11] = +k29
    Jac[5,12] = +k21
    Jac[5,14] = +k35
    Jac[5,15] = +k39
    Jac[5,16] = -k57*x[5]
    Jac[5,19] = +k56
    Jac[5,21] = -k83*x[5]
    Jac[5,22] = -k93*x[5]
    Jac[5,25] = +k82
    Jac[5,26] = +k92
    Jac[6,0] = -k14*x[6]
    Jac[6,1] = -k22*x[6]
    Jac[6,2] = +2.0*k08*x[2]-k32*x[6]
    Jac[6,3] = -k36*x[6]
    Jac[6,6] = -k09-k14*x[0]-k22*x[1]-k32*x[2]-k36*x[3]-k63*x[16]-k79*x[21]-k91*x[23]-k101*x[22]
    Jac[6,10] = +k15
    Jac[6,11] = +k23
    Jac[6,13] = +k33
    Jac[6,15] = +k37
    Jac[6,16] = -k63*x[6]
    Jac[6,20] = +k62
    Jac[6,21] = -k79*x[6]
    Jac[6,22] = -k101*x[6]
    Jac[6,23] = -k91*x[6]
    Jac[6,24] = +k78
    Jac[6,26] = +k90
    Jac[6,27] = +k100
    Jac[7,0] = -k12*x[7]
    Jac[7,1] = +2.0*k06*x[1]
    Jac[7,2] = -k30*x[7]
    Jac[7,4] = -k40*x[7]
    Jac[7,7] = -k07-k12*x[0]-k30*x[2]-k40*x[4]
    Jac[7,9] = +k13
    Jac[7,12] = +k31
    Jac[7,14] = +k41
    Jac[8,0] = +k10*x[5]
    Jac[8,1] = +k18*x[4]
    Jac[8,2] = +k24*x[3]
    Jac[8,3] = +k24*x[2]
    Jac[8,4] = +k18*x[1]
    Jac[8,5] = +k10*x[0]
    Jac[8,8] = -k11-k19-k25-k44
    Jac[8,17] = +k45
    Jac[9,0] = +k12*x[7]
    Jac[9,1] = +k16*x[3]
    Jac[9,3] = +k16*x[1]
    Jac[9,7] = +k12*x[0]
    Jac[9,9] = -k13-k17-k46
    Jac[9,18] = +k47
    Jac[10,0] = +k14*x[6]
    Jac[10,2] = +k26*x[4]
    Jac[10,4] = +k26*x[2]
    Jac[10,6] = +k14*x[0]
    Jac[10,10] = -k15-k27
    Jac[11,1] = +k22*x[6]
    Jac[11,2] = +k28*x[5]
    Jac[11,5] = +k28*x[2]
    Jac[11,6] = +k22*x[1]
    Jac[11,11] = -k23-k29-k89*x[21]
    Jac[11,21] = -k89*x[11]
    Jac[11,26] = +k88
    Jac[12,1] = +k20*x[5]
    Jac[12,2] = +k30*x[7]
    Jac[12,5] = +k20*x[1]
    Jac[12,7] = +k30*x[2]
    Jac[12,12] = -k21-k31
    Jac[13,2] = +k32*x[6]
    Jac[13,6] = +k32*x[2]
    Jac[13,13] = -k33-k99*x[21]
    Jac[13,21] = -k99*x[13]
    Jac[13,27] = +k98
    Jac[14,3] = +k34*x[5]
    Jac[14,4] = +k40*x[7]
    Jac[14,5] = +k34*x[3]
    Jac[14,7] = +k40*x[4]
    Jac[14,14] = -k35-k41-k50
    Jac[14,19] = +k51
    Jac[15,3] = +k36*x[6]
    Jac[15,4] = +k38*x[5]
    Jac[15,5] = +k38*x[4]
    Jac[15,6] = +k36*x[3]
    Jac[15,15] = -k37-k39-k48
    Jac[15,20] = +k49
    Jac[16,1] = -k55*x[16]
    Jac[16,2] = -k53*x[16]
    Jac[16,3] = +k42
    Jac[16,5] = -k57*x[16]
    Jac[16,6] = -k63*x[16]
    Jac[16,16] = -k43-k53*x[2]-k55*x[1]-k57*x[5]-k63*x[6]-k66
    Jac[16,17] = +k52
    Jac[16,18] = +k54
    Jac[16,19] = +k56
    Jac[16,20] = +k62
    Jac[16,22] = +k67
    Jac[17,1] = -k61*x[17]
    Jac[17,2] = +k53*x[16]-k65*x[17]
    Jac[17,8] = +k44
    Jac[17,16] = +k53*x[2]
    Jac[17,17] = -k45-k52-k61*x[1]-k65*x[2]-k68
    Jac[17,19] = +k60
    Jac[17,20] = +k64
    Jac[17,24] = +k69
    Jac[18,1] = +k55*x[16]
    Jac[18,2] = -k59*x[18]
    Jac[18,9] = +k46
    Jac[18,16] = +k55*x[1]
    Jac[18,18] = -k47-k54-k59*x[2]-k70
    Jac[18,19] = +k58
    Jac[18,25] = +k71
    Jac[19,1] = +k61*x[17]
    Jac[19,2] = +k59*x[18]
    Jac[19,5] = +k57*x[16]
    Jac[19,14] = +k50
    Jac[19,16] = +k57*x[5]
    Jac[19,17] = +k61*x[1]
    Jac[19,18] = +k59*x[2]
    Jac[19,19] = -k51-k56-k58-k60-k74
    Jac[19,26] = +k75
    Jac[20,2] = +k65*x[17]
    Jac[20,6] = +k63*x[16]
    Jac[20,15] = +k48
    Jac[20,16] = +k63*x[6]
    Jac[20,17] = +k65*x[2]
    Jac[20,20] = -k49-k62-k64-k72
    Jac[20,27] = +k73
    Jac[21,2] = -k77*x[21]
    Jac[21,5] = -k83*x[21]
    Jac[21,6] = -k79*x[21]
    Jac[21,11] = -k89*x[21]
    Jac[21,13] = -k99*x[21]
    Jac[21,21] = -k77*x[2]-k79*x[6]-k83*x[5]-k89*x[11]-k99*x[13]
    Jac[21,22] = +k76
    Jac[21,24] = +k78
    Jac[21,25] = +k82
    Jac[21,26] = +k88
    Jac[21,27] = +k98
    Jac[22,1] = -k87*x[22]
    Jac[22,2] = +k77*x[21]-k81*x[22]
    Jac[22,5] = -k93*x[22]
    Jac[22,6] = -k101*x[22]
    Jac[22,16] = +k66
    Jac[22,21] = +k77*x[2]
    Jac[22,22] = -k67-k76-k81*x[2]-k87*x[1]-k93*x[5]-k101*x[6]
    Jac[22,24] = +k80
    Jac[22,25] = +k86
    Jac[22,26] = +k92
    Jac[22,27] = +k100
    Jac[23,2] = -k85*x[23]
    Jac[23,6] = -k91*x[23]
    Jac[23,23] = -k85*x[2]-k91*x[6]
    Jac[23,25] = +k84
    Jac[23,26] = +k90
    Jac[24,1] = -k95*x[24]
    Jac[24,2] = +k81*x[22]-k103*x[24]
    Jac[24,6] = +k79*x[21]
    Jac[24,17] = +k68
    Jac[24,21] = +k79*x[6]
    Jac[24,22] = +k81*x[2]
    Jac[24,24] = -k69-k78-k80-k95*x[1]-k103*x[2]
    Jac[24,26] = +k94
    Jac[24,27] = +k102
    Jac[25,1] = +k87*x[22]
    Jac[25,2] = +k85*x[23]-k97*x[25]
    Jac[25,5] = +k83*x[21]
    Jac[25,18] = +k70
    Jac[25,21] = +k83*x[5]
    Jac[25,22] = +k87*x[1]
    Jac[25,23] = +k85*x[2]
    Jac[25,25] = -k71-k82-k84-k86-k97*x[2]
    Jac[25,26] = +k96
    Jac[26,1] = +k95*x[24]
    Jac[26,2] = +k97*x[25]
    Jac[26,5] = +k93*x[22]
    Jac[26,6] = +k91*x[23]
    Jac[26,11] = +k89*x[21]
    Jac[26,19] = +k74
    Jac[26,21] = +k89*x[11]
    Jac[26,22] = +k93*x[5]
    Jac[26,23] = +k91*x[6]
    Jac[26,24] = +k95*x[1]
    Jac[26,25] = +k97*x[2]
    Jac[26,26] = -k75-k88-k90-k92-k94-k96
    Jac[27,2] = +k103*x[24]
    Jac[27,6] = +k101*x[22]
    Jac[27,13] = +k99*x[21]
    Jac[27,20] = +k72
    Jac[27,21] = +k99*x[13]
    Jac[27,22] = +k101*x[6]
    Jac[27,24] = +k103*x[2]
    Jac[27,27] = -k73-k98-k100-k102
    
    return Jac
    
def generate(ofile: Path) -> np.ndarray[Any, np.dtype[np.float64]] | None:
    if ofile.exists():
        return np.loadtxt(ofile, dtype=float)
        
    t = np.arange(0, tfin, trep)
    # Time indexes and Out predefinition
    solution = scipy.integrate.solve_ivp(
        fun=model,
        jac=jacobian,
        y0=xini,
        t_span=(0, tfin),
        t_eval=t,
        method="LSODA",
        max_step=min(dt, trep),
        rtol=1e-6,
        atol=1e-11,
    )

    if not solution.success:
        print(solution.message)
        return None

    print(f"""
          nfev={solution.nfev}
          njev={solution.njev}
          nlu={solution.nlu}
          status={solution.status}
          success={solution.success}
          """)

    x = np.zeros(shape=(len(solution.t), species + 1))
    x[:, 0] = solution.t
    x[:, 1:] = solution.y[:, :].transpose()
    np.savetxt(ofile, x, delimiter="\t")
    return x

if __name__ == "__main__":
    generate(Path("kinetic_model.data"))
